# This is an auto-generated Django model module.
# You'll have to do the following manually to clean this up:
#   * Rearrange models' order
#   * Make sure each model has one field with primary_key=True
#   * Make sure each ForeignKey has `on_delete` set to the desired behavior.
#   * Remove `managed = False` lines if you wish to allow Django to create, modify, and delete the table
# Feel free to rename the models, but don't rename db_table values or field names.
from __future__ import unicode_literals

from django.db import models


class Address(models.Model):
    id = models.IntegerField(primary_key=True)
    other_address = models.CharField(max_length=100, blank=True, null=True)
    phone = models.CharField(max_length=20, blank=True, null=True)
    addresscol = models.CharField(max_length=45, blank=True, null=True)
    sido = models.ForeignKey('Sido', models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'address'

class Booking(models.Model):
    id = models.IntegerField(primary_key=True)
    start_date = models.DateTimeField(blank=True, null=True)
    return_date = models.DateTimeField(blank=True, null=True)
    status = models.IntegerField(blank=True, null=True)
    customer = models.ForeignKey('Customer', models.DO_NOTHING)
    store_inventory = models.ForeignKey('StoreInventory', models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'booking'


class Category(models.Model):
    id = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=100)

    class Meta:
        managed = False
        db_table = 'category'


class Customer(models.Model):
    id = models.IntegerField(primary_key=True)
    auth_user = models.ForeignKey(AuthUser, models.DO_NOTHING)
    address = models.ForeignKey(Address, models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'customer'


class Product(models.Model):
    id = models.IntegerField(primary_key=True)
    category = models.ForeignKey(Category, models.DO_NOTHING)
    name = models.CharField(max_length=45)
    active = models.IntegerField(blank=True, null=True)
    price = models.IntegerField(blank=True, null=True)
    last_update = models.DateTimeField(blank=True, null=True)
    published = models.DateTimeField(blank=True, null=True)
    image = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'product'


class Sido(models.Model):
    id = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=45)

    class Meta:
        managed = False
        db_table = 'sido'


class Sigungu(models.Model):
    id = models.IntegerField(primary_key=True)
    sido = models.ForeignKey(Sido, models.DO_NOTHING)
    name = models.CharField(max_length=45)

    class Meta:
        managed = False
        db_table = 'sigungu'


class Store(models.Model):
    id = models.IntegerField(primary_key=True)
    address = models.ForeignKey(Address, models.DO_NOTHING)
    name = models.CharField(max_length=45, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'store'


class StoreInventory(models.Model):
    id = models.IntegerField(primary_key=True)
    product = models.ForeignKey(Product, models.DO_NOTHING)
    store = models.ForeignKey(Store, models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'store_inventory'
